
version: 0.2
env:
  shell: /bin/bash
  variables:
    USE_EPOCH: 1
    PUBLIC_REGISTRY: public.ecr.aws/i9v7p2w3
    DOCKER_CLI_EXPERIMENTAL: enabled

batch:
  fast-fail: false
  build-graph:
    - identifier: amd64
      env:
        compute-type: BUILD_GENERAL1_LARGE
        privileged-mode: true
      buildspec: build_images.yml

    - identifier: arm64v8
      env:
        type: ARM_CONTAINER
        image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        compute-type: BUILD_GENERAL1_LARGE
        privileged-mode: true
        variables:
          ARCH: arm64v8
      buildspec: build_images.yml

    - identifier: manifest
      env:
        compute-type: BUILD_GENERAL1_LARGE
        privileged-mode: true
      depend-on:
        - amd64
        - arm64v8

phases:
  install:
    commands:
      - if [ -z ${AWS_ACCOUNT_ID+x} ]; then AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account); fi
      - REGISTRY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION:-$AWS_DEFAULT_REGION}.amazonaws.com/
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${REGISTRY_URI}
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${PUBLIC_REGISTRY}
      - if ! [ -z ${CODEBUILD_RESOLVED_SOURCE_VERSION+x} ]; then COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION::7}; fi
      - EPOCH=`date +'%Y-%m-%d'`
      - IMAGE_TAG=${COMMIT_HASH:=$EPOCH}
      - if [ $USE_EPOCH -eq 1 ]; then IMAGE_TAG=$EPOCH; fi

  build:
    commands:
      - |
          for ARCH in "" "-amd64" "-arm64v8"; do
            echo Publish from {REGISTRY_URI}python:${IMAGE_TAG}${ARCH} to ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}${ARCH};
            docker pull ${REGISTRY_URI}python:${IMAGE_TAG}${ARCH}     ;
            docker tag  ${REGISTRY_URI}python:${IMAGE_TAG}${ARCH} \
                        ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}${ARCH} ;
            docker push ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}${ARCH} ;
          done

      - |
          docker manifest create ${PUBLIC_REGISTRY}/python:${IMAGE_TAG} \
          --amend ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}                \
          --amend ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}-amd64          \
          --amend ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}-arm64v8
      - docker manifest push ${PUBLIC_REGISTRY}/python:${IMAGE_TAG}
    finally:
      - rm -rfv ~/.docker
